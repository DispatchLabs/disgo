// Code generated by protoc-gen-go. DO NOT EDIT.
// source: disgover.proto

package disgover

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_disgover_4cb036c58e161ff4, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Authenticate struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Time                 int64    `protobuf:"varint,2,opt,name=Time,proto3" json:"Time,omitempty"`
	Signature            string   `protobuf:"bytes,3,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Authenticate) Reset()         { *m = Authenticate{} }
func (m *Authenticate) String() string { return proto.CompactTextString(m) }
func (*Authenticate) ProtoMessage()    {}
func (*Authenticate) Descriptor() ([]byte, []int) {
	return fileDescriptor_disgover_4cb036c58e161ff4, []int{1}
}
func (m *Authenticate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authenticate.Unmarshal(m, b)
}
func (m *Authenticate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authenticate.Marshal(b, m, deterministic)
}
func (dst *Authenticate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authenticate.Merge(dst, src)
}
func (m *Authenticate) XXX_Size() int {
	return xxx_messageInfo_Authenticate.Size(m)
}
func (m *Authenticate) XXX_DiscardUnknown() {
	xxx_messageInfo_Authenticate.DiscardUnknown(m)
}

var xxx_messageInfo_Authenticate proto.InternalMessageInfo

func (m *Authenticate) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Authenticate) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Authenticate) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type Endpoint struct {
	Host                 string   `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	Port                 int64    `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_disgover_4cb036c58e161ff4, []int{2}
}
func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (dst *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(dst, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Endpoint) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Node struct {
	Address              string    `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	GrpcEndpoint         *Endpoint `protobuf:"bytes,2,opt,name=GrpcEndpoint,proto3" json:"GrpcEndpoint,omitempty"`
	HttpEndpoint         *Endpoint `protobuf:"bytes,3,opt,name=HttpEndpoint,proto3" json:"HttpEndpoint,omitempty"`
	Type                 string    `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_disgover_4cb036c58e161ff4, []int{3}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Node) GetGrpcEndpoint() *Endpoint {
	if m != nil {
		return m.GrpcEndpoint
	}
	return nil
}

func (m *Node) GetHttpEndpoint() *Endpoint {
	if m != nil {
		return m.HttpEndpoint
	}
	return nil
}

func (m *Node) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type PingSeed struct {
	Authenticate         *Authenticate `protobuf:"bytes,1,opt,name=Authenticate,proto3" json:"Authenticate,omitempty"`
	Node                 *Node         `protobuf:"bytes,2,opt,name=Node,proto3" json:"Node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PingSeed) Reset()         { *m = PingSeed{} }
func (m *PingSeed) String() string { return proto.CompactTextString(m) }
func (*PingSeed) ProtoMessage()    {}
func (*PingSeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_disgover_4cb036c58e161ff4, []int{4}
}
func (m *PingSeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingSeed.Unmarshal(m, b)
}
func (m *PingSeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingSeed.Marshal(b, m, deterministic)
}
func (dst *PingSeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingSeed.Merge(dst, src)
}
func (m *PingSeed) XXX_Size() int {
	return xxx_messageInfo_PingSeed.Size(m)
}
func (m *PingSeed) XXX_DiscardUnknown() {
	xxx_messageInfo_PingSeed.DiscardUnknown(m)
}

var xxx_messageInfo_PingSeed proto.InternalMessageInfo

func (m *PingSeed) GetAuthenticate() *Authenticate {
	if m != nil {
		return m.Authenticate
	}
	return nil
}

func (m *PingSeed) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type Update struct {
	Authenticate         *Authenticate `protobuf:"bytes,1,opt,name=Authenticate,proto3" json:"Authenticate,omitempty"`
	Delegates            []*Node       `protobuf:"bytes,2,rep,name=Delegates,proto3" json:"Delegates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Update) Reset()         { *m = Update{} }
func (m *Update) String() string { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()    {}
func (*Update) Descriptor() ([]byte, []int) {
	return fileDescriptor_disgover_4cb036c58e161ff4, []int{5}
}
func (m *Update) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Update.Unmarshal(m, b)
}
func (m *Update) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Update.Marshal(b, m, deterministic)
}
func (dst *Update) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Update.Merge(dst, src)
}
func (m *Update) XXX_Size() int {
	return xxx_messageInfo_Update.Size(m)
}
func (m *Update) XXX_DiscardUnknown() {
	xxx_messageInfo_Update.DiscardUnknown(m)
}

var xxx_messageInfo_Update proto.InternalMessageInfo

func (m *Update) GetAuthenticate() *Authenticate {
	if m != nil {
		return m.Authenticate
	}
	return nil
}

func (m *Update) GetDelegates() []*Node {
	if m != nil {
		return m.Delegates
	}
	return nil
}

type SoftwareUpdate struct {
	Authenticate         *Authenticate `protobuf:"bytes,1,opt,name=Authenticate,proto3" json:"Authenticate,omitempty"`
	Software             []byte        `protobuf:"bytes,2,opt,name=Software,proto3" json:"Software,omitempty"`
	ScheduledTime        int64         `protobuf:"varint,3,opt,name=ScheduledTime,proto3" json:"ScheduledTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SoftwareUpdate) Reset()         { *m = SoftwareUpdate{} }
func (m *SoftwareUpdate) String() string { return proto.CompactTextString(m) }
func (*SoftwareUpdate) ProtoMessage()    {}
func (*SoftwareUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_disgover_4cb036c58e161ff4, []int{6}
}
func (m *SoftwareUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoftwareUpdate.Unmarshal(m, b)
}
func (m *SoftwareUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoftwareUpdate.Marshal(b, m, deterministic)
}
func (dst *SoftwareUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoftwareUpdate.Merge(dst, src)
}
func (m *SoftwareUpdate) XXX_Size() int {
	return xxx_messageInfo_SoftwareUpdate.Size(m)
}
func (m *SoftwareUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_SoftwareUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_SoftwareUpdate proto.InternalMessageInfo

func (m *SoftwareUpdate) GetAuthenticate() *Authenticate {
	if m != nil {
		return m.Authenticate
	}
	return nil
}

func (m *SoftwareUpdate) GetSoftware() []byte {
	if m != nil {
		return m.Software
	}
	return nil
}

func (m *SoftwareUpdate) GetScheduledTime() int64 {
	if m != nil {
		return m.ScheduledTime
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "disgover.Empty")
	proto.RegisterType((*Authenticate)(nil), "disgover.Authenticate")
	proto.RegisterType((*Endpoint)(nil), "disgover.Endpoint")
	proto.RegisterType((*Node)(nil), "disgover.Node")
	proto.RegisterType((*PingSeed)(nil), "disgover.PingSeed")
	proto.RegisterType((*Update)(nil), "disgover.Update")
	proto.RegisterType((*SoftwareUpdate)(nil), "disgover.SoftwareUpdate")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DisgoverGrpcClient is the client API for DisgoverGrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DisgoverGrpcClient interface {
	PingSeedGrpc(ctx context.Context, in *PingSeed, opts ...grpc.CallOption) (*Update, error)
	UpdateGrpc(ctx context.Context, in *Update, opts ...grpc.CallOption) (*Empty, error)
	UpdateSoftwareGrpc(ctx context.Context, in *SoftwareUpdate, opts ...grpc.CallOption) (*Empty, error)
}

type disgoverGrpcClient struct {
	cc *grpc.ClientConn
}

func NewDisgoverGrpcClient(cc *grpc.ClientConn) DisgoverGrpcClient {
	return &disgoverGrpcClient{cc}
}

func (c *disgoverGrpcClient) PingSeedGrpc(ctx context.Context, in *PingSeed, opts ...grpc.CallOption) (*Update, error) {
	out := new(Update)
	err := c.cc.Invoke(ctx, "/disgover.DisgoverGrpc/PingSeedGrpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *disgoverGrpcClient) UpdateGrpc(ctx context.Context, in *Update, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/disgover.DisgoverGrpc/UpdateGrpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *disgoverGrpcClient) UpdateSoftwareGrpc(ctx context.Context, in *SoftwareUpdate, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/disgover.DisgoverGrpc/UpdateSoftwareGrpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DisgoverGrpcServer is the server API for DisgoverGrpc service.
type DisgoverGrpcServer interface {
	PingSeedGrpc(context.Context, *PingSeed) (*Update, error)
	UpdateGrpc(context.Context, *Update) (*Empty, error)
	UpdateSoftwareGrpc(context.Context, *SoftwareUpdate) (*Empty, error)
}

func RegisterDisgoverGrpcServer(s *grpc.Server, srv DisgoverGrpcServer) {
	s.RegisterService(&_DisgoverGrpc_serviceDesc, srv)
}

func _DisgoverGrpc_PingSeedGrpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingSeed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DisgoverGrpcServer).PingSeedGrpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/disgover.DisgoverGrpc/PingSeedGrpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DisgoverGrpcServer).PingSeedGrpc(ctx, req.(*PingSeed))
	}
	return interceptor(ctx, in, info, handler)
}

func _DisgoverGrpc_UpdateGrpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Update)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DisgoverGrpcServer).UpdateGrpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/disgover.DisgoverGrpc/UpdateGrpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DisgoverGrpcServer).UpdateGrpc(ctx, req.(*Update))
	}
	return interceptor(ctx, in, info, handler)
}

func _DisgoverGrpc_UpdateSoftwareGrpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SoftwareUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DisgoverGrpcServer).UpdateSoftwareGrpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/disgover.DisgoverGrpc/UpdateSoftwareGrpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DisgoverGrpcServer).UpdateSoftwareGrpc(ctx, req.(*SoftwareUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

var _DisgoverGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "disgover.DisgoverGrpc",
	HandlerType: (*DisgoverGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PingSeedGrpc",
			Handler:    _DisgoverGrpc_PingSeedGrpc_Handler,
		},
		{
			MethodName: "UpdateGrpc",
			Handler:    _DisgoverGrpc_UpdateGrpc_Handler,
		},
		{
			MethodName: "UpdateSoftwareGrpc",
			Handler:    _DisgoverGrpc_UpdateSoftwareGrpc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "disgover.proto",
}

func init() { proto.RegisterFile("disgover.proto", fileDescriptor_disgover_4cb036c58e161ff4) }

var fileDescriptor_disgover_4cb036c58e161ff4 = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0xae, 0xda, 0x30,
	0x10, 0x26, 0x84, 0x42, 0x18, 0x52, 0x5a, 0x79, 0x51, 0x45, 0xa8, 0x0b, 0x64, 0x75, 0xc1, 0xa2,
	0x42, 0x6a, 0x2a, 0x75, 0xd1, 0x1d, 0x12, 0xa8, 0xac, 0x2a, 0x94, 0xd0, 0x03, 0xa4, 0x78, 0x1a,
	0x52, 0x41, 0x1c, 0x39, 0xa6, 0x15, 0x97, 0xe8, 0x29, 0x7a, 0x8c, 0x1e, 0xae, 0xf2, 0x04, 0xe7,
	0x47, 0x8f, 0xb7, 0x7a, 0x6f, 0x37, 0xf3, 0xcd, 0xf7, 0x7d, 0xe3, 0xf1, 0xd8, 0x30, 0x15, 0x59,
	0x99, 0xca, 0x5f, 0xa8, 0x96, 0x85, 0x92, 0x5a, 0x32, 0xcf, 0xe6, 0x7c, 0x04, 0x2f, 0x36, 0xe7,
	0x42, 0x5f, 0xf9, 0x1e, 0xfc, 0xd5, 0x45, 0x1f, 0x31, 0xd7, 0xd9, 0x21, 0xd1, 0xc8, 0x18, 0x0c,
	0xb6, 0x49, 0x79, 0x0c, 0x9c, 0xb9, 0xb3, 0x18, 0x47, 0x14, 0x1b, 0x6c, 0x9f, 0x9d, 0x31, 0xe8,
	0xcf, 0x9d, 0x85, 0x1b, 0x51, 0xcc, 0xde, 0xc2, 0x38, 0xce, 0xd2, 0x3c, 0xd1, 0x17, 0x85, 0x81,
	0x4b, 0xe4, 0x06, 0xe0, 0x21, 0x78, 0x9b, 0x5c, 0x14, 0x32, 0xcb, 0x35, 0x39, 0xca, 0x52, 0xd7,
	0x8e, 0xb2, 0x24, 0x6c, 0x27, 0x95, 0xb6, 0x8e, 0x26, 0xe6, 0x7f, 0x1d, 0x18, 0x7c, 0x95, 0x02,
	0x59, 0x00, 0xa3, 0x95, 0x10, 0x0a, 0xcb, 0xf2, 0xa6, 0xb1, 0x29, 0xfb, 0x04, 0xfe, 0x17, 0x55,
	0x1c, 0xac, 0x35, 0xc9, 0x27, 0x21, 0x5b, 0xd6, 0x63, 0xda, 0x4a, 0xd4, 0xe1, 0x19, 0xdd, 0x56,
	0xeb, 0xa2, 0xd6, 0xb9, 0x8f, 0xeb, 0xda, 0x3c, 0x1a, 0xfc, 0x5a, 0x60, 0x30, 0xa8, 0x8e, 0x6e,
	0x62, 0xfe, 0x13, 0xbc, 0x5d, 0x96, 0xa7, 0x31, 0xa2, 0x60, 0x9f, 0xbb, 0x97, 0x47, 0xc7, 0x9d,
	0x84, 0x6f, 0x1a, 0xdf, 0x76, 0x35, 0xea, 0x5e, 0x34, 0xaf, 0xa6, 0xbd, 0xcd, 0x30, 0x6d, 0x34,
	0x06, 0x8d, 0xa8, 0xc6, 0x15, 0x0c, 0xbf, 0x15, 0xc2, 0xb0, 0x9f, 0xd2, 0xe9, 0x3d, 0x8c, 0xd7,
	0x78, 0xc2, 0x34, 0xd1, 0x58, 0x06, 0xfd, 0xb9, 0x7b, 0xa7, 0x5d, 0x43, 0xe0, 0x7f, 0x1c, 0x98,
	0xc6, 0xf2, 0x87, 0xfe, 0x9d, 0x28, 0x7c, 0x86, 0xe6, 0x33, 0xf0, 0xac, 0x1b, 0x8d, 0xea, 0x47,
	0x75, 0xce, 0xde, 0xc1, 0xcb, 0xf8, 0x70, 0x44, 0x71, 0x39, 0xa1, 0xa0, 0x07, 0xe6, 0xd2, 0x73,
	0xe8, 0x82, 0xe1, 0x3f, 0x07, 0xfc, 0xf5, 0xad, 0x93, 0xd9, 0xaa, 0xd9, 0xa6, 0xdd, 0x00, 0xe5,
	0xad, 0x3d, 0x5a, 0x7c, 0xf6, 0xba, 0xc1, 0xaa, 0x21, 0x78, 0x8f, 0x7d, 0x00, 0xa8, 0x62, 0x52,
	0x3d, 0x60, 0xcc, 0x5e, 0xb5, 0xde, 0x03, 0xfd, 0x8d, 0x1e, 0x5b, 0x01, 0xab, 0x8a, 0xf6, 0xcc,
	0x24, 0x0d, 0x1a, 0x62, 0xf7, 0xa6, 0xee, 0x58, 0x7c, 0x1f, 0xd2, 0xd7, 0xfb, 0xf8, 0x3f, 0x00,
	0x00, 0xff, 0xff, 0x92, 0x7e, 0xcb, 0x01, 0x8c, 0x03, 0x00, 0x00,
}
