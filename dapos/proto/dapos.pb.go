// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dapos.proto



package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto1.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Request struct {
	Type    string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Request) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Request) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type Response struct {
	Payload string `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type Item struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto1.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Item) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Item) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SynchronizeResponse struct {
	Items []*Item `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
}

func (m *SynchronizeResponse) Reset()                    { *m = SynchronizeResponse{} }
func (m *SynchronizeResponse) String() string            { return proto1.CompactTextString(m) }
func (*SynchronizeResponse) ProtoMessage()               {}
func (*SynchronizeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SynchronizeResponse) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto1.RegisterType((*Empty)(nil), "proto.Empty")
	proto1.RegisterType((*Request)(nil), "proto.Request")
	proto1.RegisterType((*Response)(nil), "proto.Response")
	proto1.RegisterType((*Item)(nil), "proto.Item")
	proto1.RegisterType((*SynchronizeResponse)(nil), "proto.SynchronizeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DAPoSGrpc service

type DAPoSGrpcClient interface {
	SynchronizeGrpc(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SynchronizeResponse, error)
	ExecuteGrpc(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	GossipGrpc(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type dAPoSGrpcClient struct {
	cc *grpc.ClientConn
}

func NewDAPoSGrpcClient(cc *grpc.ClientConn) DAPoSGrpcClient {
	return &dAPoSGrpcClient{cc}
}

func (c *dAPoSGrpcClient) SynchronizeGrpc(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SynchronizeResponse, error) {
	out := new(SynchronizeResponse)
	err := grpc.Invoke(ctx, "/proto.DAPoSGrpc/SynchronizeGrpc", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAPoSGrpcClient) ExecuteGrpc(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.DAPoSGrpc/ExecuteGrpc", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAPoSGrpcClient) GossipGrpc(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.DAPoSGrpc/GossipGrpc", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DAPoSGrpc service

type DAPoSGrpcServer interface {
	SynchronizeGrpc(context.Context, *Empty) (*SynchronizeResponse, error)
	ExecuteGrpc(context.Context, *Request) (*Response, error)
	GossipGrpc(context.Context, *Request) (*Response, error)
}

func RegisterDAPoSGrpcServer(s *grpc.Server, srv DAPoSGrpcServer) {
	s.RegisterService(&_DAPoSGrpc_serviceDesc, srv)
}

func _DAPoSGrpc_SynchronizeGrpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAPoSGrpcServer).SynchronizeGrpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DAPoSGrpc/SynchronizeGrpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAPoSGrpcServer).SynchronizeGrpc(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DAPoSGrpc_ExecuteGrpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAPoSGrpcServer).ExecuteGrpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DAPoSGrpc/ExecuteGrpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAPoSGrpcServer).ExecuteGrpc(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _DAPoSGrpc_GossipGrpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAPoSGrpcServer).GossipGrpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DAPoSGrpc/GossipGrpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAPoSGrpcServer).GossipGrpc(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _DAPoSGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DAPoSGrpc",
	HandlerType: (*DAPoSGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SynchronizeGrpc",
			Handler:    _DAPoSGrpc_SynchronizeGrpc_Handler,
		},
		{
			MethodName: "ExecuteGrpc",
			Handler:    _DAPoSGrpc_ExecuteGrpc_Handler,
		},
		{
			MethodName: "GossipGrpc",
			Handler:    _DAPoSGrpc_GossipGrpc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dapos.proto",
}

func init() { proto1.RegisterFile("dapos.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x50, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0xc4, 0xb4, 0x21, 0xf4, 0x82, 0x28, 0x32, 0x0c, 0x51, 0xa6, 0x62, 0x31, 0x74, 0x0a, 0xa8,
	0x0c, 0xb0, 0x30, 0x20, 0x51, 0x55, 0x6c, 0x28, 0xfd, 0x82, 0x90, 0x3e, 0x89, 0x8a, 0x36, 0x36,
	0xb1, 0x83, 0x30, 0xff, 0xc4, 0x3f, 0xa2, 0xd8, 0x26, 0xa2, 0x12, 0x03, 0x93, 0xdf, 0xdd, 0xbb,
	0xbb, 0xa7, 0x33, 0x92, 0x55, 0xa9, 0xa4, 0xce, 0x55, 0x23, 0x8d, 0xe4, 0x91, 0x7b, 0x44, 0x8c,
	0x68, 0xbe, 0x55, 0xc6, 0x8a, 0x1b, 0xc4, 0x05, 0xbd, 0xb5, 0xa4, 0x0d, 0xe7, 0x18, 0x1a, 0xab,
	0x28, 0x65, 0x13, 0x36, 0x1d, 0x15, 0x6e, 0xe6, 0x29, 0x62, 0x55, 0xda, 0x8d, 0x2c, 0x57, 0xe9,
	0xbe, 0xa3, 0x7f, 0xa0, 0xb8, 0xc0, 0x61, 0x41, 0x5a, 0xc9, 0x5a, 0xef, 0xa8, 0xd8, 0xae, 0x2a,
	0xc7, 0xf0, 0xd1, 0xd0, 0x96, 0x9f, 0x60, 0xf0, 0x4a, 0x36, 0x6c, 0xbb, 0x91, 0x9f, 0x21, 0x7a,
	0x2f, 0x37, 0x2d, 0x85, 0x5c, 0x0f, 0xc4, 0x2d, 0x4e, 0x97, 0xb6, 0xae, 0x5e, 0x1a, 0x59, 0xaf,
	0x3f, 0xa9, 0x3f, 0x70, 0x8e, 0xa8, 0x8b, 0xd1, 0x29, 0x9b, 0x0c, 0xa6, 0xc9, 0x2c, 0xf1, 0x65,
	0xf2, 0x8e, 0x2b, 0xfc, 0x66, 0xf6, 0xc5, 0x30, 0x7a, 0xb8, 0x7f, 0x92, 0xcb, 0x45, 0xa3, 0x2a,
	0x7e, 0x87, 0xf1, 0xaf, 0x1c, 0x47, 0x1d, 0x05, 0x93, 0xeb, 0x9d, 0x65, 0x01, 0xfd, 0x71, 0x4d,
	0xec, 0xf1, 0x2b, 0x24, 0xf3, 0x0f, 0xaa, 0x5a, 0xe3, 0xad, 0xc7, 0x41, 0x1c, 0x7e, 0x2a, 0x1b,
	0xf7, 0xb8, 0x77, 0x5c, 0x02, 0x0b, 0xa9, 0xf5, 0x5a, 0xfd, 0xd3, 0xf0, 0x7c, 0xe0, 0x98, 0xeb,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x4d, 0x46, 0x6f, 0x9e, 0x01, 0x00, 0x00,
}
